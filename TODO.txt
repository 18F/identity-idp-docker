docker to dos:

AWS build / chef run:
    - EC2 metadata service:
        - Figure out how to make chef recipes that rely on EC2 metadata service to work
        - Several recipes use the EC2 metadata service to find out info, but the metadata service isn't exposed to the build container in CodeBuild
        - There may be some way to pass it through, and ideally the container needs the metadata service in order to get an AWS profile for downloading stuff.
        - Looks promising: https://blog.jwr.io/aws/codebuild/container/iam/role/2019/05/30/iam-role-inside-container-inside-aws-codebuild.html

LATEST BLOCKER: deploy/migrate

base image:
    - add an explicit base docker image containing time consuming things like ruby, openssl
    - refactor identity-base-image cookbooks so that we can cache layers easily

secrets:
    - remove or defer all ConfigLoader calls in idp configs so that we can dockerbuild without secrets
    - double check that /etc/login.gov/keys/ is empty after each layer, or even remove it entirely

- move git clone of identity-idp out of chef and into dockerfile

- figure out which recipes from role[base] should really be in the docker image


build vs run split:
    - don't run deploy/activate script at all from dockerbuild
    - don't run deploy/migrate or rake db:migrate from dockerbuild
    - build-post-config fixes
        - move robots.txt into nginx, out of identity-idp

    activate configs:
        figure out what to do with /etc/login.gov/info (bind mount? pass in data using ENV?)

Container vs instance stuff
    - set hostname to reflect that it's in a container and isn't the host instance
    - make sure instance certificate / service discovery stuff is all happy
    - add info to deploy.json to tell us what container we're talking to

logging:
    - Make sure New Relic is working
    - mount volumes?
    - run aws log agent inside the container instead?

